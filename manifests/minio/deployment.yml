---
# 1) Create a Secret to store MinIO root credentials
apiVersion: v1
kind: Secret
metadata:
  name: minio-creds-secret
  labels:
    app: minio
type: Opaque
data:
  # Replace 'admin' and 'StrongPassword123' with base64-encoded strings
  # For example: echo -n 'admin' | base64
  #             echo -n 'StrongPassword123' | base64
  MINIO_ROOT_USER: YWRtaW4=
  MINIO_ROOT_PASSWORD: U3Ryb25nUGFzc3dvcmQxMjM=
---
# 2) PersistentVolumeClaim for storing MinIO data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  labels:
    app: minio
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# 3) Deployment for MinIO
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  labels:
    app: minio
  namespace: basier-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: minio/minio:latest
          args:
            - server
            - /data
          ports:
            - containerPort: 9000
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-creds-secret
                  key: MINIO_ROOT_USER
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-creds-secret
                  key: MINIO_ROOT_PASSWORD
          volumeMounts:
            - name: data
              mountPath: /data
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio-pvc
---
# 4) Service to expose MinIO within the cluster
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  labels:
    app: minio
  namespace: basier-dev
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
      name: minio
  selector:
    app: minio

